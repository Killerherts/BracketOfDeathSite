services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: bod-mongodb
    restart: unless-stopped
    command: ["mongod", "--logpath", "/var/log/mongodb/mongod.log", "--logappend", "--quiet"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: bodadmin
      MONGO_INITDB_ROOT_PASSWORD: bodpassword123
      MONGO_INITDB_DATABASE: bracket_of_death
    ports:
      - "27018:27017"
    volumes:
      # Use Docker volume instead of bind mount to avoid permission issues
      - mongodb-data:/data/db
      # Log directory
      - mongodb-logs:/var/log/mongodb
      # Initialization scripts
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - bod-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Data Initialization Service (runs once)
  data-init:
    build:
      context: .
      dockerfile: scripts/Dockerfile.data-init
    container_name: bod-data-init
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      MONGODB_URI: mongodb://bodadmin:bodpassword123@mongodb:27017/bracket_of_death?authSource=admin
    volumes:
      - ./json:/app/data:ro
      - ./data/init-status:/app/status
    networks:
      - bod-network
    restart: "no"

  # Backend API
  backend:
    build:
      context: ./src/backend
      dockerfile: Dockerfile
    container_name: bod-backend
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      data-init:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://bodadmin:bodpassword123@mongodb:27017/bracket_of_death?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      CORS_ORIGIN: http://localhost:8080
    ports:
      - "3333:3000"
    volumes:
      # Backend logs
      - ./data/logs/backend:/app/logs
    networks:
      - bod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    container_name: bod-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      VITE_API_URL: http://localhost:3333/api
    ports:
      - "8080:5173"
    networks:
      - bod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bod-network:
    driver: bridge
    name: bracket-of-death-network

volumes:
  mongodb-data:
    driver: local
  mongodb-logs:
    driver: local